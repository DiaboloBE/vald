{
  "swagger": "2.0",
  "info": {
    "title": "meta.proto",
    "version": "version not set"
  },
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/inverse/meta": {
      "delete": {
        "operationId": "DeleteMetaInverse",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/MetaKey"
            }
          }
        },
        "parameters": [
          {
            "name": "val.id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Meta"
        ]
      },
      "post": {
        "operationId": "GetMetaInverse",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/MetaKey"
            }
          }
        },
        "tags": [
          "Meta"
        ]
      }
    },
    "/inverse/metas": {
      "delete": {
        "operationId": "DeleteMetasInverse",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/MetaVals"
            }
          }
        },
        "tags": [
          "Meta"
        ]
      },
      "post": {
        "operationId": "GetMetasInverse",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/MetaKeys"
            }
          }
        },
        "tags": [
          "Meta"
        ]
      }
    },
    "/meta": {
      "get": {
        "operationId": "DeleteMeta",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/MetaVal"
            }
          }
        },
        "parameters": [
          {
            "name": "key.id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Meta"
        ]
      },
      "post": {
        "operationId": "SetMeta",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/payloadEmpty"
            }
          }
        },
        "tags": [
          "Meta"
        ]
      }
    },
    "/metas": {
      "post": {
        "operationId": "DeleteMetas",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/MetaVals"
            }
          }
        },
        "tags": [
          "Meta"
        ]
      }
    }
  },
  "definitions": {
    "MetaKey": {
      "type": "object",
      "properties": {
        "key": {
          "$ref": "#/definitions/ObjectID"
        }
      }
    },
    "MetaKeyVal": {
      "type": "object",
      "properties": {
        "key": {
          "$ref": "#/definitions/ObjectID"
        },
        "val": {
          "$ref": "#/definitions/ObjectID"
        }
      }
    },
    "MetaKeys": {
      "type": "object",
      "properties": {
        "keys": {
          "$ref": "#/definitions/ObjectIDs"
        }
      }
    },
    "MetaVal": {
      "type": "object",
      "properties": {
        "val": {
          "$ref": "#/definitions/ObjectID"
        }
      }
    },
    "MetaVals": {
      "type": "object",
      "properties": {
        "vals": {
          "$ref": "#/definitions/ObjectIDs"
        }
      }
    },
    "ObjectID": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "ObjectIDs": {
      "type": "object",
      "properties": {
        "ids": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ObjectID"
          }
        }
      }
    },
    "payloadEmpty": {
      "type": "object"
    }
  }
}
